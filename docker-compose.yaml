services:
  urlshortener-backend:
    image: melihemreguler/urlshortener-backend:latest
    container_name: urlshortener
    ports:
      - "${BACKEND_PORT:-8080}:8080"
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - MONGODB_DATABASE=${MONGODB_DATABASE:-urlshortenerdb}
      - SERVICE_URL=${SERVICE_URL}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}
      - NEW_RELIC_APP_NAME=URLShortener Backend
      - VIRTUAL_HOST=urlshortener.melihemre.dev
      - VIRTUAL_PATH=/api
      - VIRTUAL_PORT=8080
    networks:
      - web
  frontend:
    image: melihemreguler/urlshortener-frontend:latest
    container_name: urlshortener-frontend
    ports:
      - "${FRONTEND_PORT:-3000}:80"
    depends_on:
      - urlshortener-backend
    environment:
      - VITE_API_URL=${VITE_API_URL}
      - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}
      - VIRTUAL_HOST=urlshortener.melihemre.dev
      - LETSENCRYPT_HOST=urlshortener.melihemre.dev
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL:-guler@melihemre.dev}
    networks:
      - web

  newrelic-infra:
    container_name: newrelic-infra
    build:
      context: .
      dockerfile: newrelic-infra.dockerfile
    cap_add:
      - SYS_PTRACE
    network_mode: bridge
    pid: host
    privileged: true
    volumes:
      - "/:/host:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
    restart: unless-stopped
    environment:
      - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}

networks:
  web:
    external: true